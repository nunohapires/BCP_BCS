import streamlit as st
import numpy as np

# ConfiguraÃ§Ã£o da pÃ¡gina
st.set_page_config(
    page_title="Projeto BCP",
    page_icon="âš™",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Sidebar com a imagem e descriÃ§Ã£o do autor
st.sidebar.image('logo_nuno.jpg')
st.sidebar.markdown(
    """
    **Desenvolvido por:**
    - *Nuno Henrique Albuquerque Pires*
    - Estudante de Engenharia de PetrÃ³leo
    - Universidade Federal de Alagoas (UFAL)
    """
)
# TÃ­tulo principal da pÃ¡gina
st.title('Projeto BCP âš™ğŸ›¢')
st.subheader('Unidade de Bombeio')

# Separador visual
st.divider()

# SeÃ§Ã£o de entrada de dados
st.subheader('ğŸ”§ CaracterÃ­sticas do Fluido e Dados Iniciais')

col1, col2 = st.columns(2)

with col1:
    d_relativa = st.number_input('ğŸ”· Densidade Relativa', value=0.8, help="Densidade relativa do fluido")
    Mo = st.number_input('ğŸ”· Viscosidade do Ã“leo [Pa.s]', value=10, help="Viscosidade do Ã³leo em Pascal-segundo")
    dp = st.number_input('ğŸ”· Delta de PressÃ£o [Psi]', value=600, help="DiferenÃ§a de pressÃ£o aplicada")
    di = st.number_input('ğŸ”· DiÃ¢metro Interno [pol]', value=3.75, help="DiÃ¢metro interno da tubulaÃ§Ã£o")

with col2:
    N = st.number_input('ğŸ”· RotaÃ§Ã£o da Bomba [rpm]', value=300, help="Velocidade de rotaÃ§Ã£o da bomba")
    Ps = st.number_input('ğŸ”· Passo do Estator [mm]', value=180, help="DistÃ¢ncia de um ciclo completo do estator") * 1/25.4  # Convertendo para polegadas
    e = st.number_input('ğŸ”· Excentricidade [mm]', value=4, help="DistÃ¢ncia de deslocamento") * 1/25.4  # Convertendo para polegadas

# CÃ¡lculos do deslocamento, torque e potÃªncia
PD = 4 * e * di * Ps  # Deslocamento da bomba (bbl/d)
Th = 0.111 * PD * dp  # Torque sobre a bomba (lbf.ft)
Pot = 0.000191 * Th * N  # PotÃªncia da bomba (Hp)

# Separador visual
st.divider()

# ExibiÃ§Ã£o dos resultados de Deslocamento, Torque e PotÃªncia
st.subheader('ğŸ“Š Resultados de Desempenho da Bomba')
col1, col2, col3 = st.columns(3)

col1.metric("Deslocamento da Bomba", f"{PD:.2f} bbl/d", help="Volume deslocado pela bomba por dia")
col2.metric("Torque sobre a Bomba", f"{Th:.2f} lbf.ft", help="ForÃ§a rotacional sobre a bomba")
col3.metric("PotÃªncia da Bomba", f"{Pot:.2f} hp", help="PotÃªncia necessÃ¡ria para o funcionamento da bomba")

# Separador visual
st.divider()

# SeÃ§Ã£o para capacidade de gerar pressÃ£o
st.subheader('ğŸ”§ Capacidade de Gerar PressÃ£o')

cavidade = Ps / 2
option = st.selectbox("Quantos MÃ³dulos serÃ£o Utilizados?", ["Single Lobe", "Dual Lobe", "Multi Lobe"])

# Condicional para o tipo de mÃ³dulo selecionado
if option == 'Single Lobe':
    capacidade = 4.5 * 14.696
elif option == 'Dual Lobe':
    capacidade = 1.5 * 4.5 * 14.696
else:
    capacidade = 2 * 4.5 * 14.696

st.metric("Capacidade", f"{capacidade:.2f} Psi/cavidade", help="Capacidade de pressÃ£o gerada por cavidade")

# Separador visual
st.divider()

# CÃ¡lculo do nÃºmero de estÃ¡gios
st.subheader('ğŸ”§ CÃ¡lculo do NÃºmero de EstÃ¡gios')

z = st.number_input('ğŸ”· Tamanho do PoÃ§o [m]', value=1100, help="Profundidade do poÃ§o em metros") * 3.281  # Convertendo para pÃ©s
Ne = (z / Ps) - 1
st.metric("NÃºmero de EstÃ¡gios", f"{Ne:.0f}", help="NÃºmero de estÃ¡gios necessÃ¡rios para a operaÃ§Ã£o da bomba")

# Separador visual
st.divider()

# CÃ¡lculo do Head da bomba
st.subheader('ğŸ”§ Head da Bomba')

P_cabeca = (2 * N - 1) * capacidade
st.metric("Head da Bomba", f"{P_cabeca:.2f} Psi", help="PressÃ£o mÃ¡xima gerada na cabeÃ§a da bomba")

# Separador visual
st.divider()

# CÃ¡lculo da Carga Axial de Rolamento
st.subheader('ğŸ”§ Carga Axial de Rolamento')

Fb = ((np.pi) / 4) * ((2 * e + di)**2) * P_cabeca
st.metric("Carga Axial de Rolamento", f"{Fb:.2f} lbf", help="ForÃ§a axial atuante sobre o rolamento")

# Separador visual
st.divider()

# CÃ¡lculo da Carga Axial Total
st.subheader('ğŸ”§ Carga Axial Total')

peso_especifico = st.number_input('ğŸ”· Peso EspecÃ­fico [lbf/ftÂ³]', value=490, help="Peso especÃ­fico do material")
Area = np.pi * ((di / 12) / 2)**2
Wr = z * Area * peso_especifico
F = Fb + Wr
st.metric("Carga Axial Total", f"{F:.2f} lbf", help="ForÃ§a axial total atuante na bomba")

# Separador visual
st.divider()

# CÃ¡lculo da TensÃ£o Axial Total
st.subheader('ğŸ”§ TensÃ£o Axial Total (psi)')

vo = 0.028 * di * e * Ps
T = (vo * P_cabeca) / e
sig = (4 / (np.pi * di**3)) * np.sqrt(F**2 * di**2 + T**2)

st.metric("TensÃ£o Axial Total", f"{sig:.2f} psi", help="TensÃ£o axial total exercida sobre a bomba")

# Separador final
st.divider()

# ConsideraÃ§Ãµes finais e rodapÃ©
st.info("âœ… Todos os cÃ¡lculos foram realizados com sucesso. Confira os resultados nas mÃ©tricas acima.")
st.markdown("*Se precisar de mais informaÃ§Ãµes ou ajustes, consulte o engenheiro responsÃ¡vel pelo projeto.*")
